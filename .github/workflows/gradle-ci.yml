#name: CI - Build & SonarCloud Analysis
#
#on:
#  push:
#    branches:
#      - develop
#  pull_request:
#    branches:
#      - develop
#
#jobs:
#  build:
#    name: Build & Test with Gradle & MySQL
#    runs-on: ubuntu-latest
#
#    services:
#      mysql:
#        image: mysql:8
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: logistica
#          MYSQL_USER: user
#          MYSQL_PASSWORD: password
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u root --password=root" --health-interval=10s --health-timeout=5s --health-retries=5
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Wait for MySQL to be ready
#        run: |
#          for i in {1..30}; do
#            if mysqladmin ping -h "127.0.0.1" --silent; then
#              echo "MySQL is ready"
#              break
#            fi
#            echo "Waiting for MySQL..."
#            sleep 2
#          done
#
#      - name: Grant execute permission for Gradle
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build --no-daemon
#
#      - name: Run tests
#        run: ./gradlew test --no-daemon
#        env:
#          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/logistica?serverTimezone=UTC
#          SPRING_DATASOURCE_USERNAME: root
#          SPRING_DATASOURCE_PASSWORD: root
#          SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
#
#  sonarcloud:
#    name: SonarCloud Analysis
#    runs-on: ubuntu-latest
#    needs: build  # Se ejecuta despuÃ©s de que el job "build" termine correctamente
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            gradle-${{ runner.os }}-
#
#      - name: Grant execute permission for Gradle
#        run: chmod +x gradlew
#
#      - name: Run SonarCloud analysis
#        run: ./gradlew sonar --no-daemon
#        env:
#          SONAR_TOKEN: ${{ secrets.provedor }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: CI - Build & SonarCloud Analysis

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build & Test with Gradle & MySQL
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: logistica
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h "127.0.0.1" --silent; then
              echo "MySQL is ready"
              exit 0
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not become ready in time" >&2
          exit 1

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Assemble (skip tests)
        run: ./gradlew assemble --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/logistica?serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Run SonarCloud analysis
        run: ./gradlew sonar --no-daemon
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
