name: Deploy Provedor API

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clean up Docker to free space
        run: |
          docker system prune -a -f --volumes

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle (skip tests)
        run: ./gradlew build -x test --no-daemon

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Debug credentials
        run: |
          echo "DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_PASSWORD set (masked)"

      - name: Build and push Docker image
        run: |
          docker build -t proveedor/provedor-app:9525 -f ./docker/app/Dockerfile .
          docker push proveedor/provedor-app:9525

      - name: Deploy to EC2
        env:
          EC2_HOST: 3.145.183.178
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 400 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml docker/sql/init.sql $EC2_USER@$EC2_HOST:~/proyecto/
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi
            docker-compose -f ~/proyecto/docker-compose.yml down || true
            docker system prune -a -f --volumes || true
            docker pull proveedor/provedor-app:9525
            cd ~/proyecto || mkdir ~/proyecto && cd ~/proyecto
            docker-compose up -d
          EOF